[project]
name = "databricks-tools"
version = "0.2.0"
description = "MCP server for Databricks Unity Catalog with role-based access control"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Ahmed Afia", email = "afia.ahmed.28@gmail.com"}
]
keywords = ["databricks", "mcp", "sql", "unity-catalog", "mcp-server"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies from existing databricks_tools.py
dependencies = [
    "mcp[cli]>=1.8.0",
    "databricks-sql-connector>=4.0.3",
    "pandas>=2.2.3",
    "pydantic>=2.0.0",
    "python-dotenv>=1.1.0",
    "tiktoken>=0.5.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pre-commit>=4.2.0",
    "ruff>=0.7.4",
]

# Entry points for running the server and CLI
[project.scripts]
databricks-tools = "databricks_tools.server:main"
databricks-tools-init = "databricks_tools.cli.init:init_command"

[project.urls]
Homepage = "https://github.com/afia28/databricks-tools"
Repository = "https://github.com/afia28/databricks-tools"
Issues = "https://github.com/afia28/databricks-tools/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/databricks_tools"]

# Exclude documentation and development files from package
[tool.hatch.build.targets.wheel.force-include]

[tool.hatch.build]
exclude = [
    "docs/",
    "examples/",
    "tests/",
    "user_stories/",
    ".claude/",
    ".github/",
    "*.md",
    "!README.md",  # Include README.md
    "!CHANGELOG.md",  # Include CHANGELOG.md
]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "B", "C4", "UP"]
ignore = ["E501"]  # Line length handled by formatter

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[dependency-groups]
dev = [
    "freezegun>=1.5.5",
    "mypy>=1.18.2",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=7.0.0",
]
